// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: GHZ Setup Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//

private alias object.value0 : object.timer
private alias object.value1 : object.index

private alias object.value2 : object.drawX
private alias object.value3 : object.drawY
private alias object.value4 : object.letter
private alias object.value5 : object.charamount

reserve function TextDrawing

function TextDrawing
	// Get how long the target text line is
	//temp1 is how many letters there are
	//what menu your on, doesnt really matter here
	//not sure/forgot
	//what line of text is loaded
	//offset
	GetTextInfo(object.charamount, 1, TEXTINFO_TEXTSIZE, Object.Index, 0)
	
	// Loop through all the characters in the message
	while object.charamount > 0
	
	// Get the actual character at the current char pos
	GetTextInfo(object.letter, 1, TEXTINFO_TEXTDATA, Object.Index, ArrayPos0)

		Object.Frame = 0
		
		// Take uppercase letters and turn them into a matching Sprite Frame
		if object.letter > 64
			if object.letter < 91
				Object.Frame  = object.letter
				Object.Frame -= 64
			end if
		end if
		
		// Take lowercase letters and turn them into a matching Sprite Frame
		if object.letter > 96
			if object.letter < 123
				Object.Frame  = object.letter
				Object.Frame -= 96
			end if
		end if

			//ASCII Table required!
			switch object.letter
				case 64	//@	LINE SKIPPER
					object.drawY += 16
					object.drawX -= 200

					// Move to the next letter
					ArrayPos0++
					
					// And decrease the remaining letter count, as well
					object.charamount--
				break
				default
				// Notably, the space character (32) is skipped over here, as it shouldn't draw anything
				

				DrawSpriteScreenFX(Object.Frame, FX_INK, object.drawX, object.drawY)
				

				// Move to the next letter
				ArrayPos0++
				
				// And decrease the remaining letter count, as well
				object.charamount--
				
				// Each letter should be spaced 8 pixels apart
				object.drawX += 0x8
				break
			end switch


	loop
end function

//if being stupid was a job

event ObjectMain
	switch object.state
	case 0
		object.alpha = 0
		Object.Index = 0
		if object[4].value0 == 0
			object.state++
		end if
	break	
	case 1
		HUDEnabled = 0
		object.alpha += 8
		object.timer++
		if object.timer == 100
			object.state++
		end if
	break
	case 2
		object.alpha -= 8
	break
	end switch
end event

event ObjectDraw
	object.inkEffect = INK_ALPHA

	ArrayPos0 = 0	//starting letter



	temp3 = screen.xcenter
	temp3 -= object.charamount	
	temp3 -= arrayPos0
	temp3 -= 130

	object.drawX = temp3
	object.drawY = 115



	CallFunction(TextDrawing)





end event

event ObjectStartup

	LoadTextFile(1, "Data/Game/Tutorial.txt")
	LoadSpriteSheet("3D_Test/Objects.gif")

	SpriteFrame(0, 0, 0, 0, 0, 0)	//0 the bar

	// #1 -> #26 - Alphabet
	// (Using loops to automate Sprite Framing)

	//not related too stuff in objectdraw

	//temp7: starting ypos, progresses by 17 and stops before 100, because theres only 3 rows
	//temp6: starting xpos, the letter A
	temp1 = 49
	while temp1 < 100
		temp0 = 549
		while temp0 < 648
			SpriteFrame(-3, -6, 8, 16, temp0, temp1)
			temp0 += 9
		loop
		temp1 += 17
	loop
	
	
	// Place the HUD object into reserved object slot 4 and initialise its values
	Object[8].Type = TypeName[Message Text]
	
	// The object should always be run, regardless if it's within camera bounds or not
	Object[8].Priority = PRIORITY_ACTIVE
	
	// Make the HUD draw ontop of all other sprites, too
	Object[8].DrawOrder = 6

end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("IIZ/Objects1.gif")
	SpriteFrame(0, 0, 64, 64, 153, 154)
end event
