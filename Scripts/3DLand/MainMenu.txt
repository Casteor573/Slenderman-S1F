//--------------------Sonic CD HUD Script---------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
// Not all of these are used here in the HUD script, some are just used as a way for other objects to globally transmit values


// Game Mode Aliases
private alias 2 : MODE_TIMEATTACK

// Priority
private alias 1 : PRIORITY_ACTIVE

public value UseFlashlight = 0;
public value MouseEnabled = 0;
public value FlashBattery = 5000;

public alias saveRAM[295]: saved.mobile
public alias saveRAM[296]: saved.transmobile

private alias Object.Value0 : Object.Timer 
private alias Object.Value1 : Logo.Xpos
private alias Object.Value2 : Object.MenuChoose
private alias Object.Value3 : Object.ZPos
private alias Object.Value4 : Object.PlayerSelection

private alias object.value6 : object.extraoffset
private alias object.value7 : object.extratarget

private alias 5 : ST.xspeed

private alias 0 : STARTGAME
private alias 1 : ENDLESSMODE
private alias 2 : RETURNTOMENU


private alias 0 : MENU_STARTUP
private alias 1 : MENU_LOWFADEIN
private alias 2 : MENU_LOGOMOVEIN
private alias 3 : MENU_MAINCARD
private alias 4 : MENU_GOTOCHARSEL
private alias 5 : MENU_CHARASEL
private alias 6 : MENU_LOWFADEOUTCHARASEL
private alias 7 : MENU_FADEINTOCHARSEL	//wow what good ordering
private alias 8 : MENU_FADEINTOMAINCARD

event ObjectMain
	switch object.state
	case MENU_STARTUP	//setup
		object.timer = 255
		Logo.Xpos = screen.xcenter
		object.state++
	//	PlayMusic(0)	
	break
	case MENU_LOWFADEIN	//fade in
		if object.timer > -1
			object.timer -= 4
		else
			object.timer = 0	
		end if
		SetClassicFade(0, 0, 0, Object.Timer)
		if object.timer == 0
			music.volume = 100
			PlayMusic(0)	
			object.state++
		end if
	break
	case MENU_LOGOMOVEIN	//logo move in
		object.timer++
		object.alpha += 8
		if object.timer == 47
			object.timer = 0
			Object.MenuChoose = 0
			object.state++
		end if	
	break
	case MENU_MAINCARD
	//Controls
		
		if inputpress.down == 1
			if Object.MenuChoose > 1
				Object.MenuChoose = 0
			else	
				Object.MenuChoose++
			end if
			PlaySfx(SfxName[Score Add], 0)			
		end if

		if inputpress.up == 1
			if Object.MenuChoose < 1
				Object.MenuChoose = 2
			else	
				Object.MenuChoose--
			end if
			PlaySfx(SfxName[Score Add], 0)			
		end if

		if inputPress.start == 1
			PlaySfx(SfxName[Lamp Post], 0)
			switch Object.MenuChoose
			case 0	//lol
				object.timer = 0
				object.state = MENU_GOTOCHARSEL
			break		
			case 2	//lol
				object.state = 99
			break
			end switch
		end if	
	break
	case MENU_GOTOCHARSEL	//transition to next thing
		object.alpha -= 8
		if object.alpha <= 0
			object.alpha = 0
			Object.PlayerSelection = 0
			object.state = MENU_FADEINTOCHARSEL
		end if
	break
	case MENU_CHARASEL
		if object.alpha <= 255
			object.alpha += 8			
		end if



		if inputpress.right == 1
			if Object.PlayerSelection > 2
				Object.PlayerSelection = 0
			else	
				Object.PlayerSelection++
			end if
			PlaySfx(SfxName[Score Add], 0)			
		end if

		if inputpress.left == 1
			if Object.PlayerSelection < 1
				Object.PlayerSelection = 3
			else	
				Object.PlayerSelection--
			end if
			PlaySfx(SfxName[Score Add], 0)			
		end if


		if inputPress.buttonB == 1
			PlaySfx(SfxName[Skidding], 0)
			object.state = 6	//exiting what fun
		end if			
	break
	case MENU_LOWFADEOUTCHARASEL
		object.alpha -= 16
		if object.alpha <= 0
			object.alpha = 0
			object.state = 8
		end if
	break
	case MENU_FADEINTOCHARSEL
		if object.alpha < 255
			object.alpha += 8		
		end if
		object.timer++
		if object.timer == 44
			object.timer = 0
			object.state = MENU_CHARASEL	
		end if	
	break
	case MENU_FADEINTOMAINCARD
		object.alpha += 8
		if object.alpha >= 255
			object.state = MENU_MAINCARD
		end if
	break
	case 99	//exit
		music.volume -= 32
		object.timer += 8
		SetClassicFade(0, 0, 0, Object.Timer)
		if object.timer >= 255
			StopMusic()
			stage.activeList = PRESENTATION_STAGE
			stage.listPos = 6
			LoadStage()				
		end if
	break
	end switch

	//Techinal Stuff

	TileLayer[0].Angle = 128


	// X/Z movement
	Sin(TileLayer[0].XPos, TileLayer[0].Angle)
	Cos(TileLayer[0].ZPos, TileLayer[0].Angle)
	TileLayer[0].XPos *= 0x12800
	TileLayer[0].ZPos *= 0x12800
	TileLayer[0].XPos += object.xpos
	TileLayer[0].ZPos += object.zpos


	// Just take Sonic's Y Position, smooth it out a bit, and offset it by 88 pixels
	TileLayer[0].YPos = object.YPos
	TileLayer[0].YPos /= 3
	TileLayer[0].YPos += 0x1280000	

	


end event


event ObjectDraw
	//Not Dead
	DrawRect(0, 0, screen.xsize, screen.ysize, 0x00, 0x00, 0x00, 128)

	//SLIDING STUFF

	temp0 = object.extraoffset	
	temp0 -= object.extratarget
	Abs(temp0)
	if temp0 < ST.xspeed // if object.extraoffset is less then ST.xspeed/15
		object.extraoffset = object.extratarget 	// offset = target
	else	// if its not
		if object.extraoffset < object.extratarget // if offset is less then target
			object.extraoffset += ST.xspeed	//go left
		end if
		if object.extraoffset > object.extratarget // if offset is greater then target
			object.extraoffset -= ST.xspeed	//go right
		end if
	end if
	object.InkEffect = INK_ALPHA
	switch object.state
		case MENU_LOGOMOVEIN
			object.extratarget = screen.xsize
			object.extratarget += 20

			temp3 = screen.xcenter	
			temp3 = 426
			temp3 -= object.extraoffset
			//LOGO
			DrawSpriteScreenFX(0, FX_INK, temp3, screen.ycenter)	
			//BUTTONS
			DrawSpriteScreenFX(1, FX_INK, temp3, screen.ycenter)	

			temp3 -= 16
			DrawSpriteScreenFX(6, FX_INK, temp3, screen.ycenter)
		break
		case MENU_MAINCARD
		case MENU_FADEINTOMAINCARD
		case 99	//exit
			//dont move
			object.extratarget = 0
			//LOGO
			DrawSpriteScreenFX(0, FX_INK, temp3, screen.ycenter)	
			//BUTTONS
			DrawSpriteScreenFX(1, FX_INK, temp3, screen.ycenter)	


				switch Object.MenuChoose
					case STARTGAME
						DrawSpriteScreenFX(2, FX_INK, temp3, screen.ycenter)	
						temp4 = screen.ycenter
					
						temp3 -= 20
						DrawSpriteScreenFX(5, FX_INK, temp3, temp4)		
					break
					case ENDLESSMODE
						DrawSpriteScreenFX(3, FX_INK, temp3, screen.ycenter)	
						temp4 = screen.ycenter
						temp4 += 23
						temp3 -= 20
						DrawSpriteScreenFX(5, FX_INK, temp3, temp4)		
					break					
					case RETURNTOMENU
						DrawSpriteScreenFX(4, FX_INK, temp3, screen.ycenter)	
						temp4 = screen.ycenter
						temp4 += 46
						temp3 -= 20
						DrawSpriteScreenFX(5, FX_INK, temp3, temp4)							
					break						
				end switch
			
			DrawSpriteScreenFX(6, FX_INK, temp3, screen.ycenter)		
			break
		case MENU_GOTOCHARSEL
			object.extratarget = 0
			//LOGO
			DrawSpriteScreenFX(0, FX_INK, temp3, screen.ycenter)	
			//BUTTONS
			DrawSpriteScreenFX(1, FX_INK, temp3, screen.ycenter)	
			//render

			temp3 -= 20
			DrawSpriteScreenFX(6, FX_INK, temp3, screen.ycenter)	
		break		
		case MENU_FADEINTOCHARSEL
			DrawSpriteScreenFX(7, FX_INK, screen.xcenter, screen.ycenter)	

			object.extratarget = screen.xsize
			object.extratarget += 20

			temp3 = screen.xcenter	
			temp3 = 426
			temp3 -= object.extraoffset

			DrawSpriteScreenFX(8, FX_INK, temp3, screen.ycenter)	
		break
		case MENU_CHARASEL
		case MENU_LOWFADEOUTCHARASEL
			object.extratarget = 0
		
			DrawSpriteScreenFX(7, FX_INK, screen.xcenter, screen.ycenter)	

			temp3 = screen.xcenter	
		
			switch Object.PlayerSelection
			case 0	//Sonic!
				DrawSpriteScreenFX(8, FX_INK, temp3, screen.ycenter)	
			break
			case 1	//Tails!
				DrawSpriteScreenFX(9, FX_INK, temp3, screen.ycenter)	
			break			
			case 2	//Knuckles!
				DrawSpriteScreenFX(10, FX_INK, temp3, screen.ycenter)	
			break			
			case 3	//Amy!
				DrawSpriteScreenFX(11, FX_INK, temp3, screen.ycenter)	
			break			
			end switch	
		
		break	
		default
			object.extratarget = 0
			break
	end switch


end event


event ObjectStartup
	
	LoadSpriteSheet("3D_Test/Objects2.gif")
	
	//logo
	SpriteFrame(16, -96, 184, 57, 327, 1)	//0
	//buttons
	SpriteFrame(128, 0, 67, 57, 376, 59)		//1

	//HIGHLIGHTED
	//Start
	SpriteFrame(156, 0, 39, 11, 472, 59)		//2
	//Endless
	SpriteFrame(140, 23, 55, 11, 456, 82)		//3
	//Start
	SpriteFrame(130, 46, 65, 11, 446, 105)		//4

	//page icon
	SpriteFrame(130, 0, 15, 11, 360, 59)		//5

	//render
	SpriteFrame(-150, -64, 178, 147, 1, 1)		//6

	//choose
	SpriteFrame(-80, -102, 166, 11, 345, 117)		//7

	//char renders
	//Sonic Render
	SpriteFrame(-56, -42, 103, 148, 1, 229)		//8
	//Tails Render
	SpriteFrame(-84, -32, 160, 116, 105, 247)		//9
	//Knux Render
	SpriteFrame(-64, -42, 129, 134, 0, 378)		//10
	//Amy Render
	SpriteFrame(-64, -44, 130, 149, 130, 363)		//11


	
	SetMusicTrack("SlenderMenu.ogg", 0, 1)

	// Place the HUD object into reserved object slot 4 and initialise its values
	Object[4].Type = TypeName[Main Menu]
	
	// The object should always be run, regardless if it's within camera bounds or not
	Object[4].Priority = PRIORITY_ACTIVE
	
	// Make the HUD draw ontop of all other sprites, too
	Object[4].DrawOrder = 6
	
	// Cycle through all UFO objects in the scene and set them up
	ArrayPos0 = 32
	while ArrayPos0 < 1056
		if Object[ArrayPos0].Type == TypeName[Main Menu]
			
			// Due to the difference between editor and game, turn YPos into ZPos here
			Object[4].ZPos = Object[ArrayPos0].YPos

			ResetObjectEntity(ArrayPos0, TypeName[Blank Object], 0, 0, 0)
		
		end if
		
		ArrayPos0++
	loop

end event


// ========================
// Editor events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	LoadSpriteSheet("3D_Test/Objects.gif")
	SpriteFrame(0, 0, 24, 16, 206, 58)

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
